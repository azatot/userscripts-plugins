"use strict";function asyncGeneratorStep(e,t,n,r,a,o,c){try{var i=e[o](c),l=i.value}catch(e){return void n(e)}i.done?t(l):Promise.resolve(l).then(r,a)}function _asyncToGenerator(i){return function(){var e=this,c=arguments;return new Promise(function(t,n){var r=i.apply(e,c);function a(e){asyncGeneratorStep(r,t,n,a,o,"next",e)}function o(e){asyncGeneratorStep(r,t,n,a,o,"throw",e)}a(void 0)})}}function _objectDestructuringEmpty(e){if(null==e)throw new TypeError("Cannot destructure undefined")}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(n),!0).forEach(function(e){_defineProperty(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Plugin=function(){String.prototype.withUTM=function(){return this+"?utm_source=mobile&amp;utm_medium=email"};var n;function e(e,t){return"string"!=typeof e?console.error("Cannot handle ".concat(_typeof(e)," as a property of state object, this parameter must be a string")):"function"!=typeof t?console.error("Cannot handle ".concat(_typeof(t)," as a callback, this parameter must be a function")):n.setState("page",e,t)}_objectDestructuringEmpty(n={state:{page:{topNav:null,topBanner:null,topTitle:null,sections:null},common:{currentSelectedSectionIndex:null,prevSelectedSectionIndex:"0",cardsPerSection:3},form:{heading:{topNav:null,topBanner:null,topTitle:null},cards:null,banner:null,reserved:{heading:{},section:{banner:{},cards:null}}}},getState:function(e){return e&&"string"!=typeof e?"error, not string":(!0===e&&console.log(this.state),this.state)},setState:function(e,t,n){var r=n();this.state["".concat(e)]=_objectSpread({},this.state["".concat(e)],_defineProperty({},"".concat(t),r))}}),e("topNav",function(){var e=document.querySelector("#top_nav").querySelectorAll("a");return Array.prototype.map.call(e,function(e){return e})}),e("topBanner",function(){return document.querySelector("#top_banner img")}),e("topTitle",function(){return document.querySelector("#top_heading")}),e("sections",function(){var a=[];return document.querySelectorAll(".section_start").forEach(function(e){for(var n={banner:e.querySelectorAll("a")[0],cards:[],bottomButton:null},t=[],r=e;!r.className.includes("section_end");r=r.nextElementSibling,0)t.push(r),r.nextElementSibling.className.includes("section_end")&&(n.bottomButton=r.querySelector("a"),t.push(r.nextElementSibling)),r.querySelector(".product")&&r.querySelectorAll(".product").forEach(function(e){var t={};t.img=e.querySelector("img"),t.name=e.querySelector("span"),t.newPrice=e.querySelectorAll("span")[1],t.oldPrice=e.querySelectorAll("span")[2],t.links=e.querySelectorAll("a"),n.cards.push(t)});n.allSectionTrs=t,a.push(n)}),a}),n.getState("_____STATE_____"),window.globalState=n;function a(e,n,t){function r(e,t){return document.querySelector("#plugin form").innerHTML="","\n             <h2>Секция ".concat(n,'</h2>\n             <div id="banner">\n                 <div>\n                    <label for="banner-link">Ссылка на баннер</label>\n                    <input value=').concat(e.link,' id="banner-link" type="text">\n                 </div>\n                 <div>\n                    <label for="banner-src">Адрес картинки баннера</label>\n                    <input value=').concat(e.src,' id="banner-src"  type="text">\n                 </div>\n            </div>\n             <hr>\n             <h3>Товар 1</h3>\n             <div id="card1" class="form-card">\n                 <div>\n                    <label for="card1-img">URL-адрес картинки</label>\n                    <input value=').concat(t[0].img,' id="card1-img" type="text">\n                 </div>\n                 <div>\n                    <label for="card1-name">Название товара</label>\n                    <textarea id="card1-name">').concat(t[0].name,'</textarea>\n                    </div>\n                 <div>\n                    <label for="card1-newPrice">Новая цена</label>\n                    <input value=').concat(t[0].newPrice,' id="card1-newPrice" type="text">\n                 </div>\n                 <div>\n                    <label for="card1-oldPrice">Старая цена</label>\n                    <input value=').concat(t[0].oldPrice,' id="card1-oldPrice" type="text">\n                 </div>\n                 <div>\n                    <label for="card1-href">Ссылка на товар</label>\n                    <input value=').concat(t[0].link,' id="card1-href" type="text">\n                 </div>\n             </div>\n              <hr>\n             <h3>Товар 2</h3>\n             <div id="card2" class="form-card">\n                 <div>\n                    <label for="card2-img">URL-адрес картинки</label>\n                    <input value=').concat(t[1].img,' id="card2-img" type="text">\n                 </div>\n                 <div>\n                    <label for="card2-name">Название товара</label>\n                    <textarea id="card2-name">').concat(t[1].name,'</textarea>\n                 </div>\n                  <div>\n                    <label for="card2-newPrice">Новая цена</label>\n                    <input value=').concat(t[1].newPrice,' id="card2-newPrice" type="text">\n                 </div>\n                 <div>\n                    <label for="card2-oldPrice">Старая цена</label>\n                    <input value=').concat(t[1].oldPrice,' id="card2-oldPrice" type="text">\n                 </div>\n                 <div>\n                    <label for="card2-href">Ссылка на товар</label>\n                    <input value=').concat(t[1].link,' id="card2-href" type="text">\n                 </div>\n             </div>\n                <hr>\n              <h3>Товар 3</h3>\n             <div id="card3" class="form-card">\n                 <div>\n                    <label for="card3-img">URL-адрес картинки</label>\n                    <input value=').concat(t[2].img,' id="card3-img" type="text">\n                 </div>\n                 <div>\n                    <label for="card3-name">Название товара</label>\n                    <textarea id="card3-name">').concat(t[2].name,'</textarea>\n                 </div>\n                  <div>\n                    <label for="card3-newPrice">Новая цена</label>\n                    <input value=').concat(t[2].newPrice,' id="card3-newPrice" type="text">\n                 </div>\n                 <div>\n                    <label for="card3-oldPrice">Старая цена</label>\n                    <input value=').concat(t[2].oldPrice,' id="card3-oldPrice" type="text">\n                 </div>\n                 <div>\n                    <label for="card3-href">Ссылка на товар</label>\n                    <input value=').concat(t[2].link,' id="card3-href" type="text">\n                 </div>\n             </div>\n             <hr>\n             <div class="innerButtons">\n                <button id="paste" class="button" type="submit">Вставить</button>\n                <button id="clear" class="button" type="button">Очистить</button>\n                <button id="undo" class="button" type="button">Вернуть</button>\n                <button id="delete" class="button" type="button">Удалить</button>\n             </div>')}if(!0!==(2<arguments.length&&void 0!==t&&t)){var a=e.banner,o=e.cards,c={link:a.href,src:a.querySelector("img").src},i=o.map(function(e){return _objectSpread({},e,{img:e.img.src,name:e.name.innerText.trim(),newPrice:e.newPrice.innerText.trim(),oldPrice:e.oldPrice.innerText.trim(),link:e.links[0].href})});document.querySelector("#plugin form").innerHTML=r(c,i)}else{var l=e.section,u=l.banner,d=l.cards.map(function(e){return _objectSpread({},e,{img:e.img,name:e.name,newPrice:e.newPrice,oldPrice:e.oldPrice,link:e.href})});document.querySelector("#plugin form").innerHTML=r(u,d)}}function o(e,t){function n(e){var t=e.topNavNames,n=e.topNavLinks,r=e.topBanner,a=e.topTitle;return document.querySelector("#plugin form").innerHTML="",'\n             <h2>Оглавление</h2>\n             <div id="categories">\n                 <div id="1_cat">\n                    <label for="1_category-name">Категория 1</label>\n                    <textarea id="1_category-name" >'.concat(t[0],'</textarea>\n                    <label for="1_category-link">Ссылка на категорию 1</label>\n                    <input value=').concat(n[0],' id="1_category-link"  type="text">\n                 </div>\n                 <div id="2_cat">\n                    <label for="2_category-name">Категория 2</label>\n                    <textarea id="2_category-name" >').concat(t[1],'</textarea>\n                    <label for="2_category-link">Ссылка на категорию 2</label>\n                    <input value=').concat(n[1],' id="2_category-link"  type="text">\n                 </div>\n                 <div id="3_cat">\n                    <label for="3_category-name">Категория 3</label>\n                    <textarea id="3_category-name" >').concat(t[2],'</textarea>\n                    <label for="3_category-link">Ссылка на категорию 3</label>\n                    <input value=').concat(n[2],' id="3_category-link"  type="text">\n                 </div>\n                 <div id="4_cat">\n                    <label for="4_category-name">Категория 4</label>\n                    <textarea id="4_category-name" >').concat(t[3],'</textarea>\n                    <label for="4_category-link">Ссылка на категорию 4</label>\n                    <input value=').concat(n[3],' id="4_category-link"  type="text">\n                 </div>\n                  <div id="5_cat">\n                    <label for="5_category-name">Категория 5</label>\n                    <textarea id="5_category-name" >').concat(t[4],'</textarea>\n                    <label for="5_category-link">Ссылка на категорию 5</label>\n                    <input value=').concat(n[4],' id="5_category-link"  type="text">\n                 </div>\n                 <div>\n                    <label for="banner-src">Адрес картинки баннера</label>\n                    <input value=').concat(r.src,' id="banner-src"  type="text">\n                 </div>\n                 <div>\n                    <label for="heading-title">Заголовок рассылки</label>\n                    <textarea id="heading-title">').concat(a.text,'</textarea>\n                 </div>\n            </div>\n             <div class="innerButtons">\n                <button id="paste" class="button" type="submit">Вставить</button>\n                <button id="clear" class="button" type="button">Очистить</button>\n                <button id="undo" class="button" type="button">Вернуть</button>\n                \x3c!--       MUST BE HIDDEN, DON\'T TOUCH         --\x3e\n                <button id="delete" class="button hidden" type="button">Удалить</button>\n             </div>')}if(!0!==(1<arguments.length&&void 0!==t&&t)){var r={topNavNames:[],topNavLinks:[],topBanner:{src:null},topTitle:{text:null}},a=r.topNavNames,o=r.topNavLinks,c=r.topBanner;r.topTitle.text=e.topTitle.innerText,e.topNav.forEach(function(e){a.push(e.innerText),o.push(e.href)}),c.src=e.topBanner.src,document.querySelector("#plugin form").innerHTML=n(r)}else{var i={topNavNames:e.topNav.topNavNames,topNavLinks:e.topNav.topNavLinks,topBanner:{src:e.topBanner},topTitle:e.topTitle};console.log(i),document.querySelector("#plugin form").innerHTML=n(i)}}document.querySelectorAll(".top-buttons .button").forEach(function(r){r.onclick=function(){var e=this,t=globalState.getState().common.currentSelectedSectionIndex,n=globalState.getState().common.prevSelectedSectionIndex;globalState.setState("common","prevSelectedSectionIndex",function(){return n=t,String(n)}),globalState.setState("common","currentSelectedSectionIndex",function(){return String(e.id[0])}),this.classList.toggle("active"),document.getElementById("".concat(n,"_sect"))&&document.getElementById("".concat(n,"_sect")).classList.toggle("active"),"heading"===r.id?(o(globalState.getState().page),u(!0)):(a(globalState.getState().page.sections[this.id[0]],parseInt(this.id[0])+1),l(!0),i(!0)),d()}});function t(e){if("section"===e){var t=globalState.getState().common.currentSelectedSectionIndex,n=globalState.getState().page.sections[t],r=globalState.getState().form;n.cards.forEach(function(e,t){e.img.src=r.cards[t].img,e.name.innerText=r.cards[t].name,e.newPrice.innerText=r.cards[t].newPrice+" грн",e.oldPrice.innerText=r.cards[t].oldPrice+" грн",e.links.forEach(function(e){return e.href=r.cards[t].href.withUTM()})});var a=r.banner.link.withUTM();n.banner.href=a.withUTM(),n.bottomButton.href=a.withUTM(),n.banner.querySelector("img").src=r.banner.src}else if("heading"===e){var o=globalState.getState().page,c=o.topNav,i=o.topBanner,l=o.topTitle,u=globalState.getState().form.heading;c.forEach(function(e,t){e.innerText=u.topNav.topNavNames[t],e.href=u.topNav.topNavLinks[t].withUTM()}),i.src=u.topBanner,l.querySelector("span").innerText=u.topTitle.text}}function c(e,n){e.forEach(function(e){var t="".concat(e.id.split("-")[1]);n[t]=e.value})}var i=function(e){var t={},n=document.querySelectorAll("#plugin #banner input");globalState.setState("form","banner",function(){return c(n,t),!0===e&&(globalState.state.form.reserved.section.banner=t),t})},l=function(n){var r=[];document.querySelectorAll("#plugin .form-card").forEach(function(e){var t=e.querySelectorAll("input, textarea");globalState.setState("form","cards",function(){var e={};return c(t,e),r.push(e),!0===n&&(globalState.state.form.reserved.section.cards=r),r})})},u=function(e){var t={topNav:{topNavNames:[],topNavLinks:[]},topBanner:null,topTitle:{text:null}},n=document.querySelectorAll('#plugin_form div[id$="_cat"]');globalState.setState("form","heading",function(){return n.forEach(function(e){e.querySelectorAll("input, textarea").forEach(function(e){e.id.includes("name")?t.topNav.topNavNames.push(e.value):e.id.includes("link")&&t.topNav.topNavLinks.push(e.value)})}),t.topBanner=document.querySelector("#plugin_form #banner-src").value,t.topTitle.text=document.querySelector("#plugin_form #heading-title").value,!0===e&&(globalState.state.form.reserved.heading=t),t})},d=function r(){"h"===globalState.getState().common.currentSelectedSectionIndex?u(!1):(i(!1),l(!1)),document.querySelector("#plugin_form").onsubmit=function(e){e.preventDefault(),r(),"h"===globalState.getState().common.currentSelectedSectionIndex?(u(!1),t("heading")):(i(!1),l(!1),t("section"))},document.querySelector("#plugin_form #undo").onclick=function(){if("h"===globalState.getState().common.currentSelectedSectionIndex){var e=globalState.getState().form.reserved.heading;o(e,!0),r()}else{var t=globalState.getState().form.reserved,n=Number(globalState.getState().common.currentSelectedSectionIndex)+1;a(t,n,!0),r()}},document.querySelector("#plugin_form #clear").onclick=function(){document.querySelectorAll("#plugin_form input, textarea").forEach(function(e){return e.value=null})},document.querySelector("#plugin_form #delete").onclick=function(){var e=globalState.getState().page.sections,t=globalState.getState().common.currentSelectedSectionIndex;e[t].allSectionTrs.forEach(function(e){return e.remove()}),document.querySelectorAll(".top-buttons .section-button").forEach(function(e){e.id[0]===t&&e.remove()})}};document.querySelector("#copy_html").onclick=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,this.innerText="Копируем...",e.next=4,navigator.clipboard.writeText(document.querySelector("#table_root").innerHTML);case 4:console.log("Page URL copied to clipboard"),this.innerText="HTML успешно скопирован в буфер",e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),console.error("Failed to copy: ",e.t0);case 11:case"end":return e.stop()}},e,this,[[0,8]])}));return function(e){return t.apply(this,arguments)}}()};Plugin();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
